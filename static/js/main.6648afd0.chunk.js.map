{"version":3,"sources":["utils.ts","components/Navbar/styles.ts","store/vanilla.ts","store/app.ts","components/Navbar/logo.png","components/Navbar/basket.png","components/Navbar/steak.png","components/Navbar/Navbar.tsx","colors.ts","components/Egg/egg.png","components/Egg/yolk.png","components/Egg/styles.ts","components/Egg/Egg.tsx","components/RedeemEggDialog/RedeemEggDialog.tsx","components/EggsCard/styles.ts","components/EggsCard/EggsCard.tsx","components/CreateEggCard/styles.ts","components/CreateEggDialog/styles.ts","components/CreateEggDialog/Notification.tsx","components/CreateEggDialog/CreateEggDialog.tsx","components/CreateEggCard/CreateEggCard.tsx","components/DailyRewardsCard/styles.ts","components/DailyRewardsCard/DailyRewardsCard.tsx","components/BuyEggCard/styles.ts","components/BuyEggCard/BuyEggCard.tsx","components/MarketCard/styles.ts","components/MarketCard/MarketCard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","PublicKey","PROGRAM_ID","STAKE_ACCOUNT","Chain","connection","programPublicKey","ourPublicKey","statePublicKey","encoder","ensureStateAccountPublicKey","a","findProgramAddress","Buffer","from","encode","Error","initApp","feePayerWallet","console","debug","toBase58","instruction","TransactionInstruction","keys","pubkey","SystemProgram","programId","isSigner","isWritable","SYSVAR_CLOCK_PUBKEY","data","Uint8Array","of","t","Transaction","add","getRecentBlockhash","blockhash","recentBlockhash","feePayer","publicKey","signTransaction","signed_t","sendRawTransaction","serialize","txid","log","confirmTransaction","sig","transferToStakeAccount","wallet","buy_egg","associatedAccount","Account","egg_account","findAssociatedTokenAddress","associatedTokenAddress","mintAuthority","mintTokenAccount","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","i","length","transaction","transfer","fromPubkey","toPubkey","lamports","LAMPORTS_PER_SOL","partialSign","signed","this","Connection","TextEncoder","walletAddress","tokenMintAddress","toBuffer","useStyles","makeStyles","theme","createStyles","root","flexGrow","toolbar","backgroundColor","menuButton","marginRight","spacing","title","display","paddingLeft","alignItems","logo","height","transform","transport","HTTPTransport","client","Client","RequestManager","store","createFunc","create","set","chain","accounts","setAccounts","state","Wallet","setWallet","connected","setConnected","setDialogVisible","name","visible","dialogs","createEgg","redeemEgg","selectedEggPublicKey","undefined","setSelectedEggPublicKey","initialized","setInitialized","useStore","walletSelector","connectedSelector","Navbar","classes","handelConnect","connect","className","AppBar","position","Toolbar","style","alt","src","flex","Typography","variant","Button","onClick","color","basket","maxHeight","steak","GREEN","egg","margin","backgroundImage","width","backgroundSize","backgroundPosition","yolk","cursor","eggDetails","bottom","marginBottom","selected","large","setSelectedEggSelector","selectedEggSelector","Egg","epoch","showYolkOnHover","grail","selectedEgg","setSelectedEgg","clsx","defaultProps","Transition","React","forwardRef","props","ref","Slide","direction","dialogVisibleSelector","setDialogVisibleSelector","accountsSelector","clientSelector","RedeemEggDialog","useState","rent","eggData","setEggData","dialogVisible","useEffect","eggAccount","find","d","rentParams","jsonrpc","id","method","params","epochParams","request","rentRes","epochRes","account","f","handleClose","Dialog","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogContent","textAlign","toFixed","marginTop","DialogActions","paper","maxWidth","marginLeft","padding","eggIcon","chart","fill","strokeWidth","stroke","border","buttonsPanel","justifyContent","flexDirection","redeemButton","borderColor","listButton","EggsCard","getXLabels","epochs","map","rentEpoch","max","Math","apply","min","Array","v","k","reduce","acc","toString","_data","res","cumY","Object","values","prev","curr","x","Set","parseInt","y","cumsum","type","columns","colors","SOL","axis","label","localTime","tooltip","format","value","val","parseFloat","Paper","elevation","overflowX","fullWidth","disabled","interaction","enabled","bar","ratio","PURPLE","text","button","notification","Notification","setOpen","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","Fragment","IconButton","size","aria-label","fontSize","chainSelector","CreateEggDialog","showNotification","setShowNotification","rentExemption","setRentExemption","buyEgg","CreateEggCard","slotIndex","slotsInEpoch","currentEpoch","setCurrentEpoch","interval","setInterval","clearInterval","ceil","BLUE","DailyRewardsCard","getChartData","BuyEggCard","discount","abs","MarketCard","setData","getRandomBetween","floor","random","maxEpoch","premium","push","overflow","sort","b","createMuiTheme","palette","secondary","hint","setAccountsSelector","setConnectedSelector","App","setDataForWallet","useCallback","encoding","result","randoms","sum","key","includes","on","disconnect","ThemeProvider","CssBaseline","Grid","container","item","xs","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAeMA,EAAqD,IAAIC,IAC7D,gDASIC,EAAa,+CACbC,EAAgB,IAAIF,IACxB,gDAYWG,EAOX,aAAe,IAAD,gCANdC,gBAMc,OALdC,sBAKc,OAJdC,kBAIc,OAHdC,oBAGc,OAFdC,aAEc,OAONC,4BAPM,sBAOwB,8BAAAC,EAAA,yDAC/B,EAAKH,eAD0B,gCAIAP,IAAUW,mBAC1C,CAACC,EAAOC,KAAK,EAAKL,QAAQM,OAtBP,qBAuBnB,EAAKT,kBAN2B,sCAIhC,EAAKE,eAJ2B,UAQ7B,EAAKA,eARwB,sBAS1B,IAAIQ,MATsB,2CAPxB,KAqBdC,QArBc,uCAqBJ,WAAOC,GAAP,2BAAAP,EAAA,sEACF,EAAKD,8BADH,cAERS,QAAQC,MAAR,mCAA0C,EAAKZ,eAAgBa,aAEzDC,EAAc,IAAIC,IAAuB,CAC7CC,KAAM,CACJ,CAAEC,OAAQC,IAAcC,UAAWC,UAAU,EAAOC,YAAY,GAChE,CAAEJ,OAAQ,EAAKjB,eAAiBoB,UAAU,EAAOC,YAAY,GAC7D,CAAEJ,OAAQK,IAAqBF,UAAU,EAAOC,YAAY,GAC5D,CAAEJ,OAAQ,EAAKnB,iBAAkBsB,UAAU,EAAOC,YAAY,IAEhEF,UAAW,EAAKrB,iBAChByB,KAAMlB,EAAOC,KAAKkB,WAAWC,GAAG,MAG5BC,GAAI,IAAIC,KAAcC,IAAId,GAfxB,SAiBkB,EAAKjB,WAAWgC,qBAjBlC,uBAiBFC,EAjBE,EAiBFA,UACNJ,EAAEK,gBAAkBD,EACpBJ,EAAEM,SAAWtB,EAAeuB,UAnBpB,UAoBavB,EAAewB,gBAAgBR,GApB5C,eAoBJS,EApBI,iBAsBW,EAAKtC,WAAWuC,mBAAmBD,EAASE,aAtBvD,eAsBFC,EAtBE,OAuBR3B,QAAQ4B,IAAI,OAAQD,GAvBZ,UAwBU,EAAKzC,WAAW2C,mBAAmBF,GAxB7C,QAwBFG,EAxBE,OAyBR9B,QAAQ4B,IAAI,YAAaE,GAzBjB,4CArBI,2DAiDdC,uBAjDc,uCAiDW,WAAOC,GAAP,2CAAAxC,EAAA,sEACjB,EAAKD,8BADY,cAEjB0C,EAAUvC,EAAOC,KAAKkB,WAAWC,GAAG,KAClC,GAAK,EAEPoB,EAAoB,IAAIC,IAExBC,EAAc,IAAID,IAPD,SAQcE,EACnCL,EAAOV,UACPc,EAAYd,WAVS,cAQjBgB,EARiB,iBAcUxD,IAAUW,mBACzC,CAACC,EAAOC,KAAK,EAAKL,QAAQM,OAzEJ,uBA0EtB,IAAId,IAAUC,IAhBO,QA4CvB,IA5CuB,4BAchBwD,EAdgB,UAmBjBC,EAAmB,IAAIL,IAC7BnC,QAAQC,MAAR,6BAAoCsC,EAAcrC,aAE5CG,EAAO,CACX,CAAEC,OAAQ0B,EAAOV,UAAWb,UAAU,EAAMC,YAAY,GACxD,CAAEJ,OAAQC,IAAcC,UAAWC,UAAU,EAAOC,YAAY,GAChE,CAAEJ,OAAQ,EAAKjB,eAAiBoB,UAAU,EAAOC,YAAY,GAC7D,CAAEJ,OAAQK,IAAqBF,UAAU,EAAOC,YAAY,GAC5D,CAAEJ,OAAQ,EAAKnB,iBAAkBsB,UAAU,EAAOC,YAAY,GAC9D,CAAEJ,OAAQ4B,EAAkBZ,UAAWb,UAAU,EAAMC,YAAY,GACnE,CAAEJ,OAAQ8B,EAAYd,UAAWb,UAAU,EAAMC,YAAY,GAC7D,CAAEJ,OAAQmC,IAAkBhC,UAAU,EAAOC,YAAY,GACzD,CACEJ,OAAQzB,EACR4B,UAAU,EACVC,YAAY,GAEd,CAAEJ,OAAQoC,IAAoBjC,UAAU,EAAOC,YAAY,GAC3D,CAAEJ,OAAQgC,EAAwB7B,UAAU,EAAOC,YAAY,GAC/D,CAAEJ,OAAQkC,EAAiBlB,UAAWb,UAAU,EAAMC,YAAY,GAClE,CAAEJ,OAAQiC,EAAe9B,UAAU,EAAOC,YAAY,IAGxDV,QAAQC,MAAR,gCAAuCmC,EAAYd,UAAUpB,aAC7DF,QAAQ4B,IAAI,OAAQvB,GACXsC,EAAI,EAAGA,EAAItC,EAAKuC,OAAQD,IAC/B3C,QAAQ4B,IAAR,UAAee,EAAf,aAAqBtC,EAAKsC,GAAGrC,OAAOJ,aA7Cf,OAgDnB2C,GAAc,IAAI7B,KACnBC,IACCV,IAAcuC,SAAS,CACrBC,WAAYf,EAAOV,UACnB0B,SAAUhE,EACViE,SApHQ,GAoHcC,OAGzBjC,IACC,IAAIb,IAAuB,CACzBC,OACAG,UAAW,EAAKrB,iBAChByB,KAAMqB,KA5DW,UAgEG,EAAK/C,WAAWgC,qBAhEnB,wBAgEjBC,EAhEiB,EAgEjBA,UAEN0B,EAAYzB,gBAAkBD,EAC9B0B,EAAYxB,SAAWW,EAAOV,UAC9BuB,EAAYM,YAAYX,GACxBK,EAAYM,YAAYf,GACxBS,EAAYM,YAAYjB,GAtED,UAuEJF,EAAOT,gBAAgBsB,GAvEnB,eAuEnBO,EAvEmB,iBAwEN,EAAKlE,WAAWuC,mBAAmB2B,EAAO1B,aAxEpC,eAwEnBC,EAxEmB,iBAyEjB,EAAKzC,WAAW2C,mBAAmBF,GAzElB,4CAjDX,sDACZ0B,KAAKnE,WAAa,IAAIoE,IAlBN,6BAmBhBD,KAAKlE,iBAAmB,IAAIL,IAAUC,GACtCsE,KAAKjE,aAAe,IAAIN,IAfL,gDAgBnBuE,KAAK/D,QAAU,IAAIiE,a,SA0HRlB,E,gFAAf,WACEmB,EACAC,GAFF,SAAAjE,EAAA,sEAKUV,IAAUW,mBACd,CACE+D,EAAcE,WACdjB,IAAiBiB,WACjBD,EAAiBC,YAEnB7E,GAXN,uCAaI,IAbJ,4C,saC1Ka8E,EAAYC,aAAW,SAACC,GAAD,OACpCC,YAAa,CACXC,KAAM,CACJC,SAAU,GAEZC,QAAS,CACPC,gBAAiB,mBAEnBC,WAAY,CACVC,YAAaP,EAAMQ,QAAQ,IAE7BC,MAAO,CACLC,QAAS,OACTP,SAAU,EACVQ,YAAa,GACbC,WAAY,UAGdC,KAAM,CACJC,OAAQ,OACRC,UAAW,4B,6DCdTC,EAAY,IAAIC,gBAAc,6BAG9BC,EAAS,IAAIC,SAAO,IAAIC,iBAAe,CAACJ,KA0CjCK,GAHXC,EAAaC,MAGwB,SAACC,GAAD,MAAU,CAC/CC,MAAO,IAAIrG,IACXsG,SAAU,GACVC,YAAa,SAACD,GAAD,OACXF,GAAI,SAACI,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBF,iBAC9BvD,OAAQ,IAAI0D,IAAO,yBACnBC,UAAW,SAAC3D,GAAD,OAAiBqD,GAAI,SAACI,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBzD,eACxD4D,WAAW,EACXC,aAAc,SAACD,GAAD,OACZP,GAAI,SAACI,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBG,kBAC9Bb,OAAQA,EACRe,iBAAkB,SAACC,EAAkBC,GAAnB,OAChBX,GAAI,SAACI,GACH,IAAMQ,EAAO,eAAQR,EAAMQ,SAE3B,OADAA,EAAQF,GAAQC,EACT,2BAAKP,GAAZ,IAAmBQ,gBAEvBA,QAAS,CACPC,WAAW,EACXC,WAAW,GAEbC,0BAAsBC,EACtBC,wBAAyB,SAACF,GAAD,OACvBf,GAAI,SAACI,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBW,6BAC9BG,aAAa,EACbC,eAAgB,kBAAMnB,GAAI,SAACI,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBc,aAAa,YCxEpDE,EAAWrB,YAAOF,GCNhB,MAA0B,iCCA1B,MAA0B,mCCA1B,MAA0B,kC,OCcnCwB,EAAiB,SAACjB,GAAD,OAAkBA,EAAMzD,QACzC2E,EAAoB,SAAClB,GAAD,OAAkBA,EAAMG,WA+CnCgB,EA7CU,WACvB,IAAMC,EAAUlD,IACV3B,EAASyE,EAASC,GAClBd,EAAYa,EAASE,GAErBG,EAAa,uCAAG,sBAAAtH,EAAA,6DACpBQ,QAAQ4B,IAAI,SAAUI,EAAO4D,WAC7B5F,QAAQ4B,IAAI,SAAUI,EAAOV,WAFT,SAGdU,EAAO+E,UAHO,OAIpB/G,QAAQ4B,IAAI,QAASI,EAAO4D,WAC5B5F,QAAQ4B,IAAI,QAASI,EAAOV,WAC5BtB,QAAQ4B,IAAII,GANQ,2CAAH,qDASnB,OACE,qBAAKgF,UAAWH,EAAQ9C,KAAxB,SACE,cAACkD,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,CAASH,UAAWH,EAAQ5C,QAA5B,UACE,qBAAKmD,MAAO,CAAEF,SAAU,WAAYvC,OAAQ,QAA5C,SACE,qBAAK0C,IAAI,OAAOC,IAAK5C,EAAMsC,UAAWH,EAAQnC,SAEhD,sBAAKsC,UAAWH,EAAQvC,MAAxB,UACE,qBAAK8C,MAAO,CAAEG,KAAM,GAApB,SACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BAEF,sBAAKL,MAAO,CAAEG,KAAM,GAApB,UACE,eAACG,EAAA,EAAD,CAAQN,MAAO,CAAChD,YAAa,IAAKuD,QAAS,aAAUC,MAAM,UAA3D,UACE,qBAAKN,IAAKO,EAAQR,IAAI,OAAOD,MAAO,CAAEU,UAAW,MADnD,UAIA,eAACJ,EAAA,EAAD,CAAQC,QAAS,aAAUC,MAAM,UAAjC,UACE,qBAAKN,IAAKS,EAAOV,IAAI,QAAQD,MAAO,CAAEU,UAAW,MADnD,iBAMJ,cAACJ,EAAA,EAAD,CAAQC,QAASb,EAAec,MAAM,UAAtC,SACGhC,EAAW5D,EAAOV,UAAUpB,WAAa,2B,0CCjDzC8H,EAAQ,mBCLN,MAA0B,gCCA1B,MAA0B,iCCK5BrE,EAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACjEmE,IAAK,CACH1D,QAAS,eACT2D,OAAQrE,EAAMQ,QAAQ,GACtB8D,gBAAgB,QAAD,OAAUF,EAAV,MACftD,OAAQd,EAAMQ,QAAQ,IACtB+D,MAAOvE,EAAMQ,QAAQ,IACrBgE,eAAgB,QAChBC,mBAAoB,SACpB7D,WAAY,WACZmD,MAAO,OACPV,SAAU,YAEZqB,KAAM,CACJhE,QAAS,eACT2D,OAAQrE,EAAMQ,QAAQ,GACtB8D,gBAAgB,QAAD,OAAUF,EAAV,MACftD,OAAQd,EAAMQ,QAAQ,IACtB+D,MAAOvE,EAAMQ,QAAQ,IACrBgE,eAAgB,QAChBC,mBAAoB,SACpB7D,WAAY,WACZmD,MAAO,OACPV,SAAU,WACV,UAAW,CACTiB,gBAAgB,QAAD,OAAUI,EAAV,MACfC,OAAQ,YAGZC,WAAY,CACVC,OAAQ,EACRxB,SAAU,WACVtC,UAAW,uBACX+D,aAAc,GAEhBC,SAAU,CACR1E,gBHnCuB,0BGqCzB2E,MAAO,CACLlE,OAAQ,OACRyD,MAAO,a,QC9BLU,EAAyB,SAACrD,GAAD,OAAkBA,EAAMa,yBACjDyC,EAAsB,SAACtD,GAAD,OAAkBA,EAAMW,sBAE9C4C,EAAuB,SAAC,GAOvB,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,gBACA5H,EAII,EAJJA,UACAuH,EAGI,EAHJA,MACAN,EAEI,EAFJA,KACAY,EACI,EADJA,MAEMtC,EAAUlD,IACVyF,EAAc3C,EAASsC,GACvBM,EAAiB5C,EAASqC,GAYhC,OACE,qBACE9B,UAAWsC,YACTJ,EAAkBrC,EAAQ0B,KAAO1B,EAAQoB,IAD5B,eAEVpB,EAAQ+B,SAAWQ,GAAeA,IAAgB9H,GAFxC,eAGVuF,EAAQgC,MAAQA,IAErBlB,QAjBgB,WACdrG,GAEA+H,EADED,IAAgB9H,OACH+E,EAEA/E,IAMnB,SAQE,sBAAK0F,UAAWH,EAAQ4B,WAAxB,UACGQ,GAAS,eAACzB,EAAA,EAAD,CAAYC,QAAQ,QAApB,oBAAoCwB,OAC3CV,GAAQ,eAACf,EAAA,EAAD,CAAYC,QAAQ,QAApB,mBAAmCc,EAAnC,SACRY,GAAS,eAAC3B,EAAA,EAAD,CAAYC,QAAQ,QAApB,oBAAoC0B,EAApC,aAMpBH,EAAIO,aAAe,CACjBL,iBAAiB,EACjBL,OAAO,GAGMG,Q,+CClDTQ,GAAaC,IAAMC,YAAW,SAClCC,EACAC,GAEA,OAAO,cAACC,GAAA,EAAD,aAAOC,UAAU,KAAKF,IAAKA,GAASD,OAGvCI,GAAwB,SAACtE,GAAD,OAAkBA,EAAMQ,QAAQE,WACxD6D,GAA2B,SAACvE,GAAD,OAAkBA,EAAMK,kBACnDmE,GAAmB,SAACxE,GAAD,OAAkBA,EAAMF,UAC3C2E,GAAiB,SAACzE,GAAD,OAAkBA,EAAMV,QACzCgE,GAAsB,SAACtD,GAAD,OAAkBA,EAAMW,sBAsFrC+D,GApFmB,WAAO,IAAD,EACRC,mBAAS,CACrC7B,KAAM,EACNY,MAAO,EACPF,MAAO,EACPoB,KAAM,IAL8B,mBAC/BC,EAD+B,KACtBC,EADsB,KAOhCC,EAAgB/D,EAASsD,IACzBjE,EAAmBW,EAASuD,IAC5BjF,EAAS0B,EAASyD,IAClB3E,EAAWkB,EAASwD,IACpBb,EAAc3C,EAASsC,IAE7B0B,qBAAU,YACD,uCAAG,oCAAAjL,EAAA,6DACFkL,EAAanF,EAASoF,MAAK,SAACC,GAAD,OAAgBA,EAAEtK,SAAW8I,KACxDyB,EAAa,CACjBC,QAAS,MACTC,GAAI,EACJC,OAAQ,oCACRC,OAAQ,CAAC,KAELC,EAAc,CAAEJ,QAAS,MAAOC,GAAI,EAAGC,OAAQ,gBAR7C,SAScjG,EAAOoG,QAAQN,GAT7B,cASFO,EATE,gBAUerG,EAAOoG,QAAQD,GAV9B,OAUFG,EAVE,OAWRd,EAAW,CACThC,KAAI,OAAEmC,QAAF,IAAEA,OAAF,EAAEA,EAAYY,QAAQ1K,KAAK2H,KAC/BY,MAAK,OAAEuB,QAAF,IAAEA,OAAF,EAAEA,EAAYY,QAAQ1K,KAAKuI,MAChCkB,KAAMe,EACNnC,MAAOoC,EAASpC,MAAQ,IAflB,4CAAH,qDAkBPsC,KACC,CAAChG,EAAUR,EAAQqE,IAEtB,IAAMoC,EAAc,WAClB1F,EAAiB,aAAa,IAEhC,OACE,8BACE,eAAC2F,EAAA,EAAD,CACEC,KAAMlB,EACNmB,oBAAqBnC,GACrBoC,aAAW,EACXC,QAASL,EACTM,kBAAgB,2BAChBC,mBAAiB,iCANnB,UAQE,cAACC,GAAA,EAAD,UACE,sBAAK5E,MAAO,CAAE7C,QAAS,OAAQE,WAAY,UAA3C,UACE,qBAAK2C,MAAO,CAAEG,KAAM,EAAG0E,UAAW,UAAlC,SACE,cAAC,EAAD,CAAK/C,iBAAiB,EAAOL,OAAK,MAEpC,sBAAKzB,MAAO,CAAEG,KAAM,GAApB,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,8BACA,eAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,WACI6C,EAAQnB,MAAQmB,EAAQ/B,MAAM2D,QAAQ,GAD1C,UAGA,eAAC1E,EAAA,EAAD,CAAYC,QAAQ,QAAQL,MAAO,CAAE+E,UAAW,GAAhD,sBACY7B,EAAQrB,MADpB,sCAEGqB,EAAQ/B,KAFX,gBAE8B+B,EAAQnB,MAFtC,eAIA,eAAC3B,EAAA,EAAD,CAAYC,QAAQ,QAAQL,MAAO,CAAE+E,UAAW,GAAhD,6FAE4B,uBAF5B,gBAGgB7B,EAAQD,KAHxB,wCAQN,eAAC+B,GAAA,EAAD,WACE,cAAC1E,EAAA,EAAD,CAAQC,QAAS6D,EAAa5D,MAAM,YAApC,oBAGA,cAACF,EAAA,EAAD,CAAQC,QAAS,aAAUP,MAAO,CAAEQ,MAAOI,GAA3C,6BClGGrE,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACjEuI,MAAO,CACLC,SAAU,MACVC,WAAY,KACZC,QAAS3I,EAAMQ,QAAQ,GACvB8H,UAAWtI,EAAMQ,QAAQ,IAE3BoI,QAAS,CACP3E,UAAW,KAEb4E,MAAO,CACL,aAAc,CACZC,KAAM,OACNC,YAAa,EACbC,OAAQ,QAEV,SAAU,CACRA,OAAQ,QAEV,kBAAmB,CACjBF,KAAM,OACNC,YAAa,GAEf,mBAAoB,CAClB1I,gBAAiB,sBAEnB,oBAAqB,CACnBA,gBAAiB,sBAEnB,mBAAoB,CAClB4I,OAAQ,+BAGZC,aAAc,CACZxF,KAAM,IACNiF,QAAS,WACTQ,eAAgB,eAChBvI,WAAY,SACZF,QAAS,OACT0I,cAAe,UAEjBC,aAAc,CACZtF,MAAO,UACP1D,gBAAiB,mBACjB,UAAW,CACTA,gBAAiB,wBACjB0D,MAAO,UACPuF,YAAa,qBAGjBC,WAAY,CACVxF,MAAO,mBACPuF,YAAa,mBACb,UAAW,CACTjJ,gBAAiB,wBACjB0D,MAAO,mBACPuF,YAAa,0BC7CblD,I,OAAmB,SAACxE,GAAD,OAAkBA,EAAMF,WAC3CwD,GAAsB,SAACtD,GAAD,OAAkBA,EAAMW,sBAC9C4D,GAA2B,SAACvE,GAAD,OAAkBA,EAAMK,kBACnDa,GAAoB,SAAClB,GAAD,OAAkBA,EAAMG,WAkInCyH,GAhIY,WACzB,IAAM9H,EAAWkB,EAASwD,IACpBb,EAAc3C,EAASsC,IACvBjD,EAAmBW,EAASuD,IAC5BpE,EAAYa,EAASE,IAyBrB2G,EAAa,WAIjB,IAAMC,EAAShI,EAASiI,KAAI,SAAC5C,GAAD,OAAgBA,EAAEU,QAAQmC,aAChDC,EAAMC,KAAKD,IAAIE,MAAM,KAAML,GAC3BM,EAAMF,KAAKE,IAAID,MAAM,KAAML,GACjC,OAAOO,MAAMnO,KAAK,CAAEiD,OAAQ8K,EAAMG,IAAO,SAACE,EAAGC,GAAJ,OAAUA,EAAIH,KAAKI,QAC1D,SAACC,EAAUtD,GAET,OADAsD,EAAItD,EAAEuD,YAAc,EACbD,IAET,KAGErH,EAAUlD,KACVyK,EAvCS,WAIb,IAAMC,EAAM9I,EAAS0I,QAAO,SAACC,EAAU5C,GACrC,IAAM0C,EAAI1C,EAAQA,QAAQmC,UAAUU,WAKpC,OAJKD,EAAIF,KACPE,EAAIF,GAAK,GAEXE,EAAIF,IAAM1C,EAAQA,QAAQ1K,KAAKuI,MAAQmC,EAAQA,QAAQ1K,KAAK2H,KACrD2F,IACNZ,KACGgB,EAAiB,GAKvB,OAJAC,OAAOC,OAAOH,GAAKJ,QACjB,SAACQ,EAAWC,EAAW/L,GAAvB,OAA8B2L,EAAK3L,GAAK8L,EAAOC,IAC/C,GAEK,CACLC,EAAGb,MAAMnO,KAAK,IAAIiP,IAAIL,OAAOlO,KAAKgO,GAAKb,KAAI,SAAC5C,GAAD,OAAOiE,SAASjE,QAC3DkE,EAAGR,GAoBOS,GACRnO,EAAO,CACX+N,EAAG,IACHK,KAAM,MACNC,QAAS,CAAC,CACP,KADM,mBACEb,EAAMO,IADR,CAEN,OAFM,mBAEIP,EAAMU,KAEnBI,OAAQ,CAAEC,IAAK,qBAEXC,EAAO,CACXT,EAAG,CAAEU,MAAO,QAASb,OAAQlB,IAAcgC,WAAW,GACtDR,EAAG,CAAEO,MAAO,QAKRE,EAAU,CACdC,OAAQ,CACNlL,MAAO,SAACqK,GAAD,sBAAqBA,IAC5Bc,MAAO,SAACC,GAAD,OAAcC,WAAWD,GAAKxD,QAAQ,MAQjD,OACE,eAAC0D,EAAA,EAAD,CAAOC,UAAW,GAAI7I,UAAWH,EAAQwF,MAAzC,UACE,cAAC7E,EAAA,EAAD,CAAYI,MAAM,gBAAgBH,QAAQ,KAA1C,qBAIA,sBAAKL,MAAO,CAAE7C,QAAS,QAAvB,UACE,qBAAK6C,MAAO,CAAEG,KAAM,GAAKO,UAAW,OAAQgI,UAAW,UAAvD,SACGvK,EAASiI,KAAI,SAAC5C,GAAD,OACZ,cAAC,EAAD,CAEE3B,MAAO2B,EAAEU,QAAQmC,UACjBnM,UAAWsJ,EAAEtK,OACb6I,MAAOyB,EAAEU,QAAQ1K,KAAKuI,MACtBZ,KAAMqC,EAAEU,QAAQ1K,KAAK2H,MALvB,cACcqC,EAAEtK,cAQpB,sBAAK0G,UAAWH,EAAQkG,aAAxB,UACE,cAACrF,EAAA,EAAD,CACEV,UAAWH,EAAQqG,aACnB6C,WAAS,EACTC,UAAW5G,IAAgBxD,EAC3B+B,QA3BgB,WACxB7B,EAAiB,aAAa,IA2BtB2B,QAAQ,YACRG,MAAM,UANR,oBAUA,cAACF,EAAA,EAAD,CACEV,UAAWH,EAAQuG,WACnB2C,WAAS,EACTpI,QAAS,aACTF,QAAQ,WACRG,MAAM,YALR,qBAUF,qBAAKR,MAAO,CAAEG,KAAM,IAApB,SACE,cAAC,IAAD,CACEP,UAAWH,EAAQ6F,MACnB9L,KAAMA,EACNwO,KAAMA,EACNa,YAzDU,CAAEC,SAAS,GA0DrBC,IA3DE,CAAE/H,MAAO,CAAEgI,MAAO,KA4DpBb,QAASA,SAIf,cAAC,GAAD,QC5IAc,GAAS,oBAGF1M,GAAYC,aAAW,SAACC,GAAD,OAClCC,YAAa,CACXuI,MAAO,CACLC,SAAU,MACVC,WAAY,KACZC,QAAS3I,EAAMQ,QAAQ,GACvB8H,UAAWtI,EAAMQ,QAAQ,IAE3BiM,KAAM,CACJ1I,MAAOyI,IAETE,OAAQ,CACNrM,gBAAiBmM,GACjBzI,MAAO,UACPQ,MAAO,MACP,UAAW,CACTlE,gBAlBa,iC,yCCARP,GAAYC,aAAW,SAACC,GAAD,OAClCC,YAAa,CACX0M,aAAc,CACZ,mBAAoB,CAClBtM,gBAAgB,GAAD,OAAK8D,EAAL,sBC2CRyI,GAtCuB,SAAC,GAAuB,IAArB/E,EAAoB,EAApBA,KAAMgF,EAAc,EAAdA,QACvC7J,EAAUlD,KAEV6H,EAAc,SAClBmF,EACAC,GAEe,cAAXA,GAIJF,GAAQ,IAGV,OACE,8BACE,cAACG,GAAA,EAAD,CACE7J,UAAWH,EAAQ2J,aACnBM,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdtF,KAAMA,EACNuF,iBAAkB,IAClBpF,QAASL,EACT0F,QAAQ,6BACRC,OACE,cAAC,IAAMC,SAAP,UAEE,cAACC,GAAA,EAAD,CAAYC,KAAK,QAAQC,aAAW,QAAQ3J,MAAM,UAAUD,QAAS6D,EAArE,SACE,cAAC,KAAD,CAAWgG,SAAS,mBC5B5BxH,GAA2B,SAACvE,GAAD,OAAkBA,EAAMK,kBACnDiE,GAAwB,SAACtE,GAAD,OAAkBA,EAAMQ,QAAQC,WACxDgE,GAAiB,SAACzE,GAAD,OAAkBA,EAAMV,QACzC0M,GAAgB,SAAChM,GAAD,OAAkBA,EAAMH,OACxCoB,GAAiB,SAACjB,GAAD,OAAkBA,EAAMzD,QAEzCwH,GAAaC,IAAMC,YAAW,SAClCC,EACAC,GAEA,OAAO,cAACC,GAAA,EAAD,aAAOC,UAAU,KAAKF,IAAKA,GAASD,OA0E9B+H,GAvEmB,WAAO,IAAD,EACUtH,oBAAS,GADnB,mBAC/BuH,EAD+B,KACbC,EADa,KAEhCpH,EAAgB/D,EAASsD,IACzBjE,EAAmBW,EAASuD,IAC5BjF,EAAS0B,EAASyD,IAJc,EAKIE,mBAAS,GALb,mBAK/ByH,EAL+B,KAKhBC,EALgB,KAMhCxM,EAAQmB,EAASgL,IACjBzP,EAASyE,EAASC,IAElB8E,EAAc,WAClB1F,EAAiB,aAAa,IAGhC2E,qBAAU,YACD,uCAAG,8BAAAjL,EAAA,6DACFyL,EAAS,CACbH,QAAS,MACTC,GAAI,EACJC,OAAQ,oCACRC,OAAQ,CAAC,KALH,SAOUlG,EAAOoG,QAAQF,GAPzB,OAOFoD,EAPE,OAQRyD,EAAiBzD,GART,2CAAH,qDAUP9C,KACC,CAACxG,IAEJ,IAAMgN,EAAM,uCAAG,sBAAAvS,EAAA,sEACP8F,EAAMvD,uBAAuBC,GADtB,OAEb8D,EAAiB,aAAa,GAC9B8L,GAAoB,GAHP,2CAAH,qDAMZ,OACE,gCACE,eAACnG,EAAA,EAAD,CACEC,KAAMlB,EACNmB,oBAAqBnC,GACrBoC,aAAW,EACXC,QAASL,EACTM,kBAAgB,2BAChBC,mBAAiB,iCANnB,UAQE,cAACC,GAAA,EAAD,UACE,sBAAK5E,MAAO,CAAE7C,QAAS,QAAvB,UACE,qBAAK6C,MAAO,CAAEG,KAAM,GAApB,SACE,cAAC,EAAD,MAEF,sBAAKH,MAAO,CAAEG,KAAM,GAApB,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,8BACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,yBACA,eAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,6DACmDoK,EAAe,IADlE,yCAON,eAACzF,GAAA,EAAD,WACE,cAAC1E,EAAA,EAAD,CAAQC,QAAS6D,EAAa5D,MAAM,YAApC,oBAGA,cAACF,EAAA,EAAD,CAAQC,QAASoK,EAAQ3K,MAAO,CAAEQ,MXrFtB,yBWqFZ,0BAKJ,cAAC,GAAD,CAAc8D,KAAMiG,EAAkBjB,QAASkB,QCpF/C1H,GAAiB,SAACzE,GAAD,OAAkBA,EAAMV,QACzC4B,GAAoB,SAAClB,GAAD,OAAkBA,EAAMG,WAC5CoE,GAA2B,SAACvE,GAAD,OAAiBA,EAAMK,kBAqEzCkM,GAnEiB,WAC9B,IAAMnL,EAAUlD,KADoB,EAEIyG,mBAAS,CAACnB,MAAO,EAAGgJ,UAAW,EAAGC,aAAc,IAFpD,mBAE7BC,EAF6B,KAEfC,EAFe,KAG9BrN,EAAS0B,EAASyD,IAClBpE,EAAmBW,EAASuD,IAC5BpE,EAAYa,EAASE,IAE3B8D,qBAAU,WACN,IAAM4H,EAAWC,YAAW,sBAAC,8BAAA9S,EAAA,6DACrByL,EAAS,CACbH,QAAS,MACTE,OAAQ,gBAHiB,SAKTjG,EAAOoG,QAAQF,GALN,OAKrBoD,EALqB,OAM3B+D,EAAgB/D,GANW,2CAO1B,KACH,OAAO,kBAAMkE,cAAcF,MAC5B,CAACtN,IAaJ,OACE,eAAC6K,EAAA,EAAD,CAAO5I,UAAWH,EAAQwF,MAAOwD,UAAW,GAA5C,UACE,cAAC,GAAD,IACA,cAACrI,EAAA,EAAD,CAAYR,UAAWH,EAAQyJ,KAAM7I,QAAQ,KAA7C,2BAIA,sBAAKL,MAAO,CAAE7C,QAAS,OAAQE,WAAY,UAA3C,UACE,qBAAK2C,MAAO,CAAEG,KAAM,GAApB,SACE,cAAC,EAAD,CAAK2B,iBAAiB,MAExB,sBAAK9B,MAAO,CAAEG,KAAM,GAApB,UACE,cAACC,EAAA,EAAD,CAAYR,UAAWH,EAAQyJ,KAAM7I,QAAQ,KAA7C,6BAGA,eAACD,EAAA,EAAD,CAAYR,UAAWH,EAAQyJ,KAAM7I,QAAQ,KAA7C,4BACkB0K,EAAalJ,MAAO,OAEtC,eAACzB,EAAA,EAAD,CAAYR,UAAWH,EAAQyJ,KAAM7I,QAAQ,KAA7C,yBACe0K,EAAaF,UAD5B,IACwCE,EAAaD,aADrD,YAzBCvE,KAAK6E,KAAML,EAAaF,UAAUE,EAAaD,aAAgB,KAAQ,IAyBxE,WAIF,qBAAK9K,MAAO,CAAEG,KAAM,EAAG0E,UAAW,UAAlC,SACE,cAACvE,EAAA,EAAD,CACEV,UAAWH,EAAQ0J,OACnB5I,QA7BU,WAClB7B,EAAiB,aAAa,IA6BtB2B,QAAQ,YACRuI,UAAWpK,EAJb,6BCjEG6M,GAAO,mBAEP9O,GAAYC,aAAW,SAACC,GAAD,OAClCC,YAAa,CACXuI,MAAO,CAGLG,QAAS3I,EAAMQ,QAAQ,GACvB8H,UAAWtI,EAAMQ,QAAQ,IAE3BiM,KAAM,CACJ1I,MAAO6K,IAET/F,MAAO,CACL,YAAa,CACXC,KAAM,OACNC,YAAa,EACbC,OAAQ,QAEV,SAAU,CACRA,OAAQ,QAEV,kBAAmB,CACjBF,KAAM,OACNC,YAAa,GAEf,mBAAoB,CAClB1I,gBAAiB,sBAEnB,oBAAqB,CACnBA,gBAAiB,sBAEnB,mBAAoB,CAClB4I,OAAQ,oCCxBVqD,GAAM,CAAE/H,MAAO,CAAEgI,MAAO,KACxBH,GAAc,CAAEC,SAAS,GAEzBjG,GAAmB,SAACxE,GAAD,OAAkBA,EAAMF,UAgFlCmN,GA9EoB,WACjC,IAAMnN,EAAWkB,EAASwD,IACpBpD,EAAUlD,KAgCVyK,EAde,WACnB,IAAMC,EAAM9I,EAAS0I,QAAO,SAACC,EAAU5C,GACrC,IAAM0C,EAAI1C,EAAQA,QAAQmC,UAAUU,WAKpC,OAJID,EAAIF,KACNE,EAAIF,GAAK,GAEXE,EAAIF,IAAM1C,EAAQA,QAAQ1K,KAAKuI,MACxB+E,IAvBQ,WAIjB,IAAMX,EAAShI,EAASiI,KAAI,SAAC5C,GAAD,OAAgBA,EAAEU,QAAQmC,aAChDC,EAAMC,KAAKD,IAAIE,MAAM,KAAML,GAC3BM,EAAMF,KAAKE,IAAID,MAAM,KAAML,GACjC,OAAOO,MAAMnO,KAAK,CAAEiD,OAAQ8K,EAAMG,IAAO,SAACE,EAAGC,GAAJ,OAAUA,EAAIH,KAAKI,QAC1D,SAACC,EAAUtD,GAET,OADAsD,EAAItD,EAAEuD,YAAc,EACbD,IAET,IAYCZ,IACH,MAAO,CACLqB,EAAGb,MAAMnO,KAAK,IAAIiP,IAAIL,OAAOlO,KAAKgO,GAAKb,KAAI,SAAC5C,GAAD,OAAOiE,SAASjE,QAC3DkE,EAAGP,OAAOC,OAAOH,IAGPsE,GACR/R,EAAO,CACX+N,EAAG,IACHK,KAAM,MACNC,QAAS,CAAC,CACP,KADM,mBACEb,EAAMO,IADR,CAEN,OAFM,mBAEIP,EAAMU,KAEnBI,OAAQ,CAAEC,IAAKsD,KAGXrD,EAAO,CACXT,EAAG,CACDU,MAAO,QACPb,OAAQJ,EAAMO,EACdW,WAAW,GAEbR,EAAG,CAAEO,MAAO,QAGRE,EAAU,CACdC,OAAQ,CACNlL,MAAO,SAACqK,GAAD,sBAAqBA,IAC5Bc,MAAO,SAACC,GAAD,OAAcC,WAAWD,GAAKxD,QAAQ,MAIjD,OADAlM,QAAQ4B,IAAIhB,GAEV,eAACgP,EAAA,EAAD,CAAOC,UAAW,GAAI7I,UAAWH,EAAQwF,MAAzC,UACE,cAAC7E,EAAA,EAAD,CAAYR,UAAWH,EAAQyJ,KAAM7I,QAAQ,KAA7C,+BAGA,cAAC,IAAD,CACE7G,KAAMA,EACNoG,UAAWH,EAAQ6F,MACnB0C,KAAMA,EACNa,YAAaA,GACbE,IAAKA,GACLZ,QAASA,QCnFJ5L,GAAYC,aAAW,SAACC,GAAD,OAClCC,YAAa,CACXyM,OAAQ,CACNrM,gBANc,mBAOd0D,MAAO,UACP,UAAW,CACT1D,gBARkB,gCCqCX0O,GA5BqB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAU5J,EAAY,EAAZA,MACzCpC,EAAUlD,KAChB,OACE,sBAAKyD,MAAO,CAAE7C,QAAS,OAAQE,WAAY,UAA3C,UACE,qBAAK2C,MAAO,CAAEG,KAAM,GAApB,SACE,cAAC,EAAD,CAAK2B,iBAAiB,MAExB,sBAAK9B,MAAO,CAAEG,KAAM,GAApB,UACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQG,MAAM,cAAlC,oBACUqB,KAEV,cAACzB,EAAA,EAAD,CAAYC,QAAQ,QAAQG,MAAM,cAAlC,SACgB,IAAbiL,EACG,eACAA,EAAW,EAAX,mBACYlF,KAAKmF,IAAID,GADrB,yBAEalF,KAAKmF,IAAID,GAFtB,UAKR,qBAAKzL,MAAO,CAAEG,KAAM,GAApB,SACE,cAACG,EAAA,EAAD,CAAQV,UAAWH,EAAQ0J,OAAQ5I,QAAS,aAA5C,uBC5BKhE,GAAYC,aAAW,SAACC,GAAD,OAClCC,YAAa,CACXuI,MAAO,CACL1H,OAAQ,MAGR6H,QAAS3I,EAAMQ,QAAQ,GACvB8H,UAAWtI,EAAMQ,QAAQ,IAE3BiM,KAAM,CACJ1I,MAZc,yBCWdqC,GAAmB,SAACxE,GAAD,OAAkBA,EAAMF,UA0ClCwN,GAxCc,WAAO,IAAD,EACT3I,mBAAqB,IADZ,mBAC1BxJ,EAD0B,KACpBoS,EADoB,KAE3BzN,EAAWkB,EAASwD,IAEpBgJ,EAAmB,SAACpF,EAAaH,GACrC,OAAOC,KAAKuF,MAAMvF,KAAKwF,UAAYzF,EAAM,IAAMG,GAGjDpD,qBAAU,WAIR,IAHA,IAAM8C,EAAShI,EAASiI,KAAI,SAAC5C,GAAD,OAAgBA,EAAEU,QAAQmC,aAChD2F,EAAWzF,KAAKD,IAAIE,MAAM,KAAML,GAChCa,EAAoB,GACjBzL,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAM0Q,EAAU1F,KAAKwF,SAAW,GAAM,GAAK,EAC3C/E,EAAMkF,KAAK,CACTrK,MAAOgK,EAAiB,EAAGG,GAC3BP,SAAUI,EAAiB,EAAII,EAAmB,EAAVA,KAG5CL,EAAQ5E,KACP,CAAC7I,IAEJ,IAAMsB,EAAUlD,KAChB,OACE,eAACiM,EAAA,EAAD,CAAOC,UAAW,GAAI7I,UAAWH,EAAQwF,MAAzC,UACE,cAAC7E,EAAA,EAAD,CAAYR,UAAWH,EAAQyJ,KAAM7I,QAAQ,KAA7C,6BAIA,qBAAKL,MAAO,CAAEG,KAAM,GAAKO,UAAW,OAAQyL,SAAU,UAAtD,SACG3S,EACE4S,MAAK,SAAChU,EAAGiU,GAAJ,OAAUjU,EAAEyJ,MAAQwK,EAAExK,SAC3BuE,KAAI,SAAC5C,EAAGjI,GAAJ,OACH,cAAC,GAAD,CAAoBkQ,SAAUjI,EAAEiI,SAAU5J,MAAO2B,EAAE3B,OAAlCtG,Y,mBCjCvBkB,GAAQ6P,YAAe,CAC3BC,QAAS,CACP3E,KAAM,OACNsB,KAAM,CACJsD,UAAW,8BACXC,KAAM,mCAKNpC,GAAgB,SAAChM,GAAD,OAAkBA,EAAMH,OACxCwO,GAAsB,SAACrO,GAAD,OAAkBA,EAAMD,aAC9CkB,GAAiB,SAACjB,GAAD,OAAkBA,EAAMzD,QACzC+R,GAAuB,SAACtO,GAAD,OAAkBA,EAAMI,cAC/CqE,GAAiB,SAACzE,GAAD,OAAkBA,EAAMV,QAuFhCiP,OAjFf,WACE,IAAMxO,EAAciB,EAASqN,IACvBjO,EAAeY,EAASsN,IACxB/R,EAASyE,EAASC,IAClB3B,EAAS0B,EAASyD,IAGlB+J,GAFQxN,EAASgL,IAEEyC,sBAAW,sBAAC,0CAAA1U,EAAA,6DAC7ByL,EAAS,CACbH,QAAS,MACTC,GAAI,EACJC,OAAQ,0BACRC,OAAQ,CAGN,+CAEA,CAAEzK,UAAWiC,KAAiBvC,YAC9B,CAAEiU,SAAU,gBAXmB,SAedpP,EAAOoG,QAAQF,GAfD,OAqBnC,IANMmJ,EAf6B,OAgB7B7O,EAAsB6O,EAAO3E,MAAM+D,MACvC,SAAChU,EAAYiU,GAAb,OAA4BjU,EAAE8L,QAAQmC,UAAYgG,EAAEnI,QAAQmC,aAExD4G,EAAqC,GACvCC,EAAM,EACD3R,EAAI4C,EAAS3C,OAAS,EAAGD,GAAK,EAAGA,IAClC4R,EAAMhP,EAAS5C,GAAG2I,QAAQmC,UAAUU,WACrCI,OAAOlO,KAAKgU,GAASG,SAASD,KAC3B7E,EAlCL/B,KAAK6E,KAAqB,IAAhB7E,KAAKwF,UAAmB,IAmCnCmB,GAAO5E,EACP4E,EAAM3E,WAAW2E,EAAIpI,QAAQ,IAC7BmI,EAAQE,GAAOD,GAEjB/O,EAAS5C,GAAG2I,QAAQ1K,KAAKuI,MAAQkL,EAAQE,GACzChP,EAAS5C,GAAG2I,QAAQ1K,KAAK2H,KAAO,GAElC/C,EAAYD,GAhCuB,2CAiClC,CAACC,EAAaT,KAsBjB,OApBA0F,qBAAU,WAcR,OAbAzI,EAAOyS,GAAG,UAAV,uCAAqB,WAAOnT,GAAP,SAAA9B,EAAA,6DACnBQ,QAAQ4B,IAAR,uBAA4BN,IAC5BuE,GAAa,GAFM,SAGboO,IAHa,2CAArB,uDAKAjS,EAAOyS,GAAG,cAAc,WACtBzU,QAAQ4B,IAAI,gBACZiE,GAAa,MAER,uCAAG,sBAAArG,EAAA,sEACFyU,IADE,2CAAH,oDAGP1I,GACO,kBAAMvJ,EAAO0S,gBACnB,CAAC7O,EAAc7D,EAAQiS,IAMxB,eAACU,EAAA,EAAD,CAAe9Q,MAAOA,GAAtB,UACE,cAAC+Q,EAAA,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,eAACC,GAAA,EAAD,CAAMC,WAAS,EAACzQ,QAAS,EAAG+C,MAAO,CAAEgB,MAAO,MAAOmE,WAAY,QAA/D,UACE,cAACsI,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,GAAD,MAEF,cAACJ,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,GAAD,aC7FKC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.6648afd0.chunk.js","sourcesContent":["// cspell: ignore sysvar lamports blockhash devnet txid\nimport {\n  Connection,\n  PublicKey,\n  Account,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  LAMPORTS_PER_SOL\n} from '@solana/web3.js'\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token'\n\n// https://spl.solana.com/associated-token-account#creating-an-associated-token-account\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID: PublicKey = new PublicKey(\n  'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL'\n)\n\n// LOCAL CLUSTER\n// const PROGRAM_ID = \"8X2jRAZD25tSrGeEDaAmQXYY8Ki3uJBMBVgK4Dr2prcJ\"\n// const STAKE_ACCOUNT = new PublicKey('F6gy4BtV5hRJJnHwr6ww2wMgyanGux8hhwBJugHPp9B3')\n// const CLUSTER_URL = 'http://0.0.0.0:8899'\n\n// DEVNET\nconst PROGRAM_ID = '94qJGagpfsdWbPZewFj7CzzsFkjJfFJ56z8xE64X9DXL'\nconst STAKE_ACCOUNT = new PublicKey(\n  '4yvBtnpRJJGhspF3jj9bNtTo6tciJwoNjy1d7czVfguf'\n)\nconst CLUSTER_URL = 'https://devnet.solana.com'\n// const PROGRAM_ID = \"8X2jRAZD25tSrGeEDaAmQXYY8Ki3uJBMBVgK4Dr2prcJ\"\n\nconst EGG_PRICE = 10 // TODO: change to 10\n\nconst OUR_PUBLIC_KEY = '4yvBtnpRJJGhspF3jj9bNtTo6tciJwoNjy1d7czVfguf' // TODO: remove\n\nconst STATE_ACCOUNT_SEED = 'egg-app-state-2'\nconst MINT_AUTHORITY_SEED = 'egg-app-mint-auth'\n\nexport class Chain {\n  connection: Connection\n  programPublicKey: PublicKey\n  ourPublicKey: PublicKey // TODO: remove\n  statePublicKey?: PublicKey\n  encoder: TextEncoder\n\n  constructor() {\n    this.connection = new Connection(CLUSTER_URL)\n    this.programPublicKey = new PublicKey(PROGRAM_ID)\n    this.ourPublicKey = new PublicKey(OUR_PUBLIC_KEY)\n    this.encoder = new TextEncoder()\n  }\n\n  private ensureStateAccountPublicKey = async () => {\n    if (!this.statePublicKey) {\n      let _: any\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      ;[this.statePublicKey, _] = await PublicKey.findProgramAddress(\n        [Buffer.from(this.encoder.encode(STATE_ACCOUNT_SEED))],\n        this.programPublicKey\n      )\n      if (!this.statePublicKey) {\n        throw new Error()\n      }\n    }\n  }\n\n  initApp = async (feePayerWallet: any) => {\n    await this.ensureStateAccountPublicKey()\n    console.debug(`State account address is ${this.statePublicKey!.toBase58()}`)\n\n    const instruction = new TransactionInstruction({\n      keys: [\n        { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n        { pubkey: this.statePublicKey!, isSigner: false, isWritable: true },\n        { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n        { pubkey: this.programPublicKey, isSigner: false, isWritable: false }\n      ],\n      programId: this.programPublicKey,\n      data: Buffer.from(Uint8Array.of(0))\n    })\n\n    const t = new Transaction().add(instruction)\n\n    let { blockhash } = await this.connection.getRecentBlockhash()\n    t.recentBlockhash = blockhash\n    t.feePayer = feePayerWallet.publicKey\n    let signed_t = await feePayerWallet.signTransaction(t)\n\n    const txid = await this.connection.sendRawTransaction(signed_t.serialize())\n    console.log('TXID', txid)\n    const sig = await this.connection.confirmTransaction(txid)\n    console.log('Signature', sig)\n  }\n\n  transferToStakeAccount = async (wallet: any) => {\n    await this.ensureStateAccountPublicKey()\n    const buy_egg = Buffer.from(Uint8Array.of(0))\n    buy_egg[0] = 1\n\n    const associatedAccount = new Account()\n\n    const egg_account = new Account()\n    const associatedTokenAddress = await findAssociatedTokenAddress(\n      wallet.publicKey,\n      egg_account.publicKey\n    )\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [mintAuthority, _] = await PublicKey.findProgramAddress(\n      [Buffer.from(this.encoder.encode(MINT_AUTHORITY_SEED))],\n      new PublicKey(PROGRAM_ID)\n    )\n\n    const mintTokenAccount = new Account()\n    console.debug(`MINT AUTHORITY PK: ${mintAuthority.toBase58()}`)\n\n    const keys = [\n      { pubkey: wallet.publicKey, isSigner: true, isWritable: true },\n      { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n      { pubkey: this.statePublicKey!, isSigner: false, isWritable: true },\n      { pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: this.programPublicKey, isSigner: false, isWritable: false },\n      { pubkey: associatedAccount.publicKey, isSigner: true, isWritable: true },\n      { pubkey: egg_account.publicKey, isSigner: true, isWritable: true },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n      {\n        pubkey: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n        isSigner: false,\n        isWritable: false\n      },\n      { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false },\n      { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n      { pubkey: mintTokenAccount.publicKey, isSigner: true, isWritable: true },\n      { pubkey: mintAuthority, isSigner: false, isWritable: true }\n    ]\n\n    console.debug(`Egg account token ID: ${egg_account.publicKey.toBase58()}`)\n    console.log('KEYS', keys)\n    for (let i = 0; i < keys.length; i++) {\n      console.log(`${i}. ${keys[i].pubkey.toBase58()}`)\n    }\n\n    let transaction = new Transaction()\n      .add(\n        SystemProgram.transfer({\n          fromPubkey: wallet.publicKey,\n          toPubkey: STAKE_ACCOUNT,\n          lamports: EGG_PRICE * LAMPORTS_PER_SOL\n        })\n      )\n      .add(\n        new TransactionInstruction({\n          keys,\n          programId: this.programPublicKey,\n          data: buy_egg\n        })\n      )\n\n    let { blockhash } = await this.connection.getRecentBlockhash()\n    // @ts-ignore\n    transaction.recentBlockhash = blockhash\n    transaction.feePayer = wallet.publicKey\n    transaction.partialSign(mintTokenAccount)\n    transaction.partialSign(egg_account)\n    transaction.partialSign(associatedAccount)\n    let signed = await wallet.signTransaction(transaction)\n    let txid = await this.connection.sendRawTransaction(signed.serialize())\n    await this.connection.confirmTransaction(txid)\n  }\n}\n\nasync function findAssociatedTokenAddress(\n  walletAddress: PublicKey,\n  tokenMintAddress: PublicKey\n): Promise<PublicKey> {\n  return (\n    await PublicKey.findProgramAddress(\n      [\n        walletAddress.toBuffer(),\n        TOKEN_PROGRAM_ID.toBuffer(),\n        tokenMintAddress.toBuffer()\n      ],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n    )\n  )[0]\n}\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme: Theme) =>\ncreateStyles({\n  root: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    backgroundColor: 'rgb(43, 43, 43)'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'flex',\n    flexGrow: 1,\n    paddingLeft: 70,\n    alignItems: 'center'\n\n  },\n  logo: {\n    height: '100%',\n    transform: 'translate(-20px, 0)'\n  }\n}),\n);","// cspell: ignore pubkey lamports\nimport create from 'zustand/vanilla'\nimport { devtools } from 'zustand/middleware'\nimport pipe from 'ramda/src/pipe'\nimport { RequestManager, HTTPTransport, Client } from '@open-rpc/client-js'\n// @ts-ignore\nimport Wallet from '@project-serum/sol-wallet-adapter'\nimport { Chain } from '../utils'\nconst transport = new HTTPTransport('https://devnet.solana.com')\n// const transport = new HTTPTransport('http://0.0.0.0:8899')\n// const transport = new HTTPTransport('/chain')\nconst client = new Client(new RequestManager([transport]))\n\nexport interface Account {\n  pubkey: string\n  account: {\n    data: any\n    executable: boolean\n    lamports: number\n    owner: string\n    rentEpoch: number\n  }\n}\n\ntype DialogName = 'createEgg' | 'redeemEgg'\n\nexport type State = {\n  chain: Chain\n  accounts: Account[]\n  setAccounts: (accounts: Account[]) => void\n  wallet?: any\n  setWallet: (wallet: any) => void\n  connected: boolean\n  setConnected: (connected: boolean) => void\n  client: Client\n  setDialogVisible: (name: DialogName, visible: boolean) => void\n  dialogs: {\n    createEgg: boolean\n    redeemEgg: boolean\n  }\n  selectedEggPublicKey?: string\n  setSelectedEggPublicKey: (selectedEggPublicKey: string | undefined) => void\n  initialized: boolean\n  setInitialized: () => void\n}\n\nlet createFunc\nif (process.env.NODE_ENV !== 'production') {\n  createFunc = pipe(devtools, create)\n} else {\n  createFunc = create\n}\n\nexport const store = createFunc<State>((set) => ({\n  chain: new Chain(),\n  accounts: [],\n  setAccounts: (accounts: Account[]) =>\n    set((state) => ({ ...state, accounts })),\n  wallet: new Wallet('https://www.sollet.io'),\n  setWallet: (wallet: any) => set((state) => ({ ...state, wallet })),\n  connected: false,\n  setConnected: (connected: boolean) =>\n    set((state) => ({ ...state, connected })),\n  client: client,\n  setDialogVisible: (name: DialogName, visible: boolean) =>\n    set((state) => {\n      const dialogs = { ...state.dialogs }\n      dialogs[name] = visible\n      return { ...state, dialogs }\n    }),\n  dialogs: {\n    createEgg: false,\n    redeemEgg: false\n  },\n  selectedEggPublicKey: undefined,\n  setSelectedEggPublicKey: (selectedEggPublicKey: string | undefined) =>\n    set((state) => ({ ...state, selectedEggPublicKey })),\n  initialized: false,\n  setInitialized: () => set((state) => ({ ...state, initialized: true }))\n}))\n","// cspell: ignore zustand\nimport create from 'zustand'\nimport { store } from './vanilla'\n// import { State as _State} from './vanilla'\n\nexport type {State, Account} from './vanilla'\nexport const useStore = create(store)\n","export default __webpack_public_path__ + \"static/media/logo.a1389bd0.png\";","export default __webpack_public_path__ + \"static/media/basket.72e301ce.png\";","export default __webpack_public_path__ + \"static/media/steak.3660ac9a.png\";","import React from 'react'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport { useStyles } from './styles'\nimport { useStore, State } from '../../store/app'\nimport logo from './logo.png'\nimport basket from './basket.png'\nimport steak from './steak.png'\n\nconst walletSelector = (state: State) => state.wallet\nconst connectedSelector = (state: State) => state.connected\n\nconst Navbar: React.FC = () => {\n  const classes = useStyles()\n  const wallet = useStore(walletSelector)\n  const connected = useStore(connectedSelector)\n\n  const handelConnect = async () => {\n    console.log('BEFORE', wallet.connected)\n    console.log('BEFORE', wallet.publicKey)\n    await wallet.connect()\n    console.log('AFTER', wallet.connected)\n    console.log('AFTER', wallet.publicKey)\n    console.log(wallet)\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar className={classes.toolbar}>\n          <div style={{ position: 'absolute', height: '100%' }}>\n            <img alt=\"logo\" src={logo} className={classes.logo} />\n          </div>\n          <div className={classes.title}>\n            <div style={{ flex: 1 }}>\n              <Typography variant=\"h6\">Stake &amp; Eggs</Typography>\n            </div>\n            <div style={{ flex: 1 }}>\n              <Button style={{marginRight: 48}} onClick={() => {}} color=\"inherit\">\n                <img src={basket} alt=\"eggs\" style={{ maxHeight: 50 }} />\n                Eggs\n              </Button>\n              <Button onClick={() => {}} color=\"inherit\">\n                <img src={steak} alt=\"stake\" style={{ maxHeight: 50 }} />\n                Stake\n              </Button>\n            </div>\n          </div>\n          <Button onClick={handelConnect} color=\"inherit\">\n            {connected? wallet.publicKey.toBase58() : 'Connect Wallet'}\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default Navbar\n","export const LIGHT_BLUE = 'rgba(3, 225, 255, 0.6)'\nexport const BLUE = 'rgba(3, 225, 255, 1)'\nexport const LIGHT_PURPLE = 'rgba(194, 63, 218, 0.6)'\nexport const PURPLE = 'rgba(194, 63, 218, 1)'\nexport const WHITE = '#FFF'\nexport const GREEN = 'rgb(0, 255, 163)'\nexport const LIGHT_GREEN = 'rgba(0, 255, 163, 0.2)'","export default __webpack_public_path__ + \"static/media/egg.1a7642be.png\";","export default __webpack_public_path__ + \"static/media/yolk.28f9e8b3.png\";","import {Theme, makeStyles, createStyles} from '@material-ui/core/styles'\nimport { LIGHT_GREEN } from '../../colors'\nimport egg from './egg.png'\nimport yolk from './yolk.png'\n\nexport const useStyles = makeStyles((theme: Theme) => createStyles({\n  egg: {\n    display: 'inline-block',\n    margin: theme.spacing(3),\n    backgroundImage: `url(\"${egg}\")`,\n    height: theme.spacing(12),\n    width: theme.spacing(12),\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    alignItems: 'flex-end',\n    color: '#FFF',\n    position: 'relative'\n  },\n  yolk: {\n    display: 'inline-block',\n    margin: theme.spacing(3),\n    backgroundImage: `url(\"${egg}\")`,\n    height: theme.spacing(12),\n    width: theme.spacing(12),\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    alignItems: 'flex-end',\n    color: '#FFF',\n    position: 'relative',\n    '&:hover': {\n      backgroundImage: `url(\"${yolk}\")`,\n      cursor: 'pointer'\n    }\n  },\n  eggDetails: {\n    bottom: 0,\n    position: 'absolute',\n    transform: 'translate(0px ,64px)',\n    marginBottom: 8\n  },\n  selected: {\n    backgroundColor: LIGHT_GREEN\n  },\n  large: {\n    height: '30vh',\n    width: '30vh'\n  }\n}))","import React from 'react'\nimport { useStyles } from './styles'\nimport Typography from '@material-ui/core/Typography'\nimport { useStore, State } from '../../store/app'\nimport clsx from 'clsx'\n\ninterface Props {\n  epoch?: number\n  showYolkOnHover?: boolean\n  publicKey?: string\n  large?: boolean\n  yolk?: number\n  grail?: number\n}\n\nconst setSelectedEggSelector = (state: State) => state.setSelectedEggPublicKey\nconst selectedEggSelector = (state: State) => state.selectedEggPublicKey\n\nconst Egg: React.FC<Props> = ({\n  epoch,\n  showYolkOnHover,\n  publicKey,\n  large,\n  yolk,\n  grail\n}) => {\n  const classes = useStyles()\n  const selectedEgg = useStore(selectedEggSelector)\n  const setSelectedEgg = useStore(setSelectedEggSelector)\n\n  const handleClick = () => {\n    if (publicKey) {\n      if (selectedEgg === publicKey) {\n        setSelectedEgg(undefined)\n      } else {\n        setSelectedEgg(publicKey)\n      }\n    }\n  }\n\n  return (\n    <div\n      className={clsx(\n        showYolkOnHover ? classes.yolk : classes.egg,\n        { [classes.selected]: selectedEgg && selectedEgg === publicKey },\n        { [classes.large]: large }\n      )}\n      onClick={handleClick}\n    >\n      <div className={classes.eggDetails}>\n        {epoch && <Typography variant=\"body2\">Epoch #{epoch}</Typography>}\n        {!!yolk && <Typography variant=\"body2\">Yolk: {yolk} </Typography>}\n        {!!grail && <Typography variant=\"body2\">Grail: {grail} </Typography>}\n      </div>\n    </div>\n  )\n}\n\nEgg.defaultProps = {\n  showYolkOnHover: true,\n  large: false\n}\n\nexport default Egg\n","import React, { useEffect, useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Slide from '@material-ui/core/Slide'\nimport { TransitionProps } from '@material-ui/core/transitions'\nimport { useStore, State, Account } from '../../store/app'\nimport { GREEN } from '../../colors'\nimport { Egg } from '../Egg'\n// import Notification from './Notification'\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nconst dialogVisibleSelector = (state: State) => state.dialogs.redeemEgg\nconst setDialogVisibleSelector = (state: State) => state.setDialogVisible\nconst accountsSelector = (state: State) => state.accounts\nconst clientSelector = (state: State) => state.client\nconst selectedEggSelector = (state: State) => state.selectedEggPublicKey\n\nconst RedeemEggDialog: React.FC = () => {\n  const [eggData, setEggData] = useState({\n    yolk: 0,\n    grail: 0,\n    epoch: 0,\n    rent: 0\n  })\n  const dialogVisible = useStore(dialogVisibleSelector)\n  const setDialogVisible = useStore(setDialogVisibleSelector)\n  const client = useStore(clientSelector)\n  const accounts = useStore(accountsSelector)\n  const selectedEgg = useStore(selectedEggSelector)\n\n  useEffect(() => {\n    const f = async () => {\n      const eggAccount = accounts.find((d: Account) => d.pubkey === selectedEgg)\n      const rentParams = {\n        jsonrpc: '2.0',\n        id: 1,\n        method: 'getMinimumBalanceForRentExemption',\n        params: [16]\n      }\n      const epochParams = { jsonrpc: '2.0', id: 1, method: 'getEpochInfo' }\n      const rentRes = await client.request(rentParams)\n      const epochRes = await client.request(epochParams)\n      setEggData({\n        yolk: eggAccount?.account.data.yolk,\n        grail: eggAccount?.account.data.grail,\n        rent: rentRes,\n        epoch: epochRes.epoch + 1\n      })\n    }\n    f()\n  }, [accounts, client, selectedEgg])\n\n  const handleClose = () => {\n    setDialogVisible('redeemEgg', false)\n  }\n  return (\n    <div>\n      <Dialog\n        open={dialogVisible}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogContent>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <div style={{ flex: 1, textAlign: 'center' }}>\n              <Egg showYolkOnHover={false} large />\n            </div>\n            <div style={{ flex: 1 }}>\n              <Typography variant=\"h6\">You will receive</Typography>\n              <Typography variant=\"h3\">\n                {(eggData.grail + eggData.yolk).toFixed(2)} SOL\n              </Typography>\n              <Typography variant=\"body1\" style={{ marginTop: 8 }}>\n                At epoch {eggData.epoch}. We will then transfer your yolk (\n                {eggData.yolk}) and grail ({eggData.grail}) rewards\n              </Typography>\n              <Typography variant=\"body2\" style={{ marginTop: 8 }}>\n                Your egg will be made into omelettes (burnt) once the\n                transaction is confirmed. <br />\n                Your rent of {eggData.rent} lamports will be released\n              </Typography>\n            </div>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={() => {}} style={{ color: GREEN }}>\n            REDEEM\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {/* <Notification open={showNotification} setOpen={setShowNotification} /> */}\n    </div>\n  )\n}\n\nexport default RedeemEggDialog\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme: Theme) => createStyles({\n  paper: {\n    maxWidth: '94%',\n    marginLeft: '3%',\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(4),\n  },\n  eggIcon: {\n    maxHeight: 120\n  },\n  chart: {\n    '&  .domain': {\n      fill: 'none',\n      strokeWidth: 1,\n      stroke: '#fff'\n    },\n    '& line': {\n      stroke: '#FFF'\n    },\n    '& .tick, & text': {\n      fill: '#fff',\n      strokeWidth: 1\n    },\n    '& .c3-tooltip th': {\n      backgroundColor: 'rgba(30,30,30,0.8)'\n    },\n    ' & .c3-tooltip td': {\n      backgroundColor: 'rgba(30,30,30,0.7)'\n    },\n    '& .c3-tooltip tr': {\n      border: '1px rgba(30,30,30,1) solid'\n    }\n  },\n  buttonsPanel: {\n    flex: 0.15, \n    padding: '0px 16px',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  redeemButton: {\n    color: '#303030',\n    backgroundColor: 'rgb(0, 255, 163)',\n    '&:hover': {\n      backgroundColor: 'rgba(0, 255, 163,0.6)',\n      color: '#303030',\n      borderColor: 'rgb(0, 255, 163)'\n    }\n  },\n  listButton: {\n    color: 'rgb(0, 255, 163)',\n    borderColor: 'rgb(0, 255, 163)',\n    '&:hover': {\n      backgroundColor: 'rgba(0, 255, 163,0.1)',\n      color: 'rgb(0, 255, 163)',\n      borderColor: 'rgb(0, 255, 163)'\n    }\n  }\n}))","// cspell: ignore cumsum\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\n// @ts-ignore\nimport C3Chart from 'react-c3js'\nimport { Egg } from '../Egg'\nimport { RedeemEggDialog } from '../RedeemEggDialog'\nimport { useStore, State, Account } from '../../store/app'\nimport { useStyles } from './styles'\nimport 'c3/c3.css'\n\nconst accountsSelector = (state: State) => state.accounts\nconst selectedEggSelector = (state: State) => state.selectedEggPublicKey\nconst setDialogVisibleSelector = (state: State) => state.setDialogVisible\nconst connectedSelector = (state: State) => state.connected\n\nconst EggsCard: React.FC = () => {\n  const accounts = useStore(accountsSelector)\n  const selectedEgg = useStore(selectedEggSelector)\n  const setDialogVisible = useStore(setDialogVisibleSelector)\n  const connected = useStore(connectedSelector)\n\n  const cumsum = (): { x: number[]; y: number[] } => {\n    /**\n     * @returns the cumulative sum of the eggs\n     */\n    const res = accounts.reduce((acc: any, account: Account) => {\n      const k = account.account.rentEpoch.toString()\n      if (!acc[k]) {\n        acc[k] = 0\n      }\n      acc[k] += account.account.data.grail + account.account.data.yolk\n      return acc\n    }, getXLabels())\n    const cumY: number[] = []\n    Object.values(res).reduce(\n      (prev: any, curr: any, i) => (cumY[i] = prev + curr),\n      0\n    )\n    return {\n      x: Array.from(new Set(Object.keys(res).map((d) => parseInt(d)))),\n      y: cumY\n    }\n  }\n\n  const getXLabels = (): number[] => {\n    /**\n     * @returns all the epochs between the first and the last one\n     */\n    const epochs = accounts.map((d: Account) => d.account.rentEpoch)\n    const max = Math.max.apply(null, epochs)\n    const min = Math.min.apply(null, epochs)\n    return Array.from({ length: max - min }, (v, k) => k + min).reduce(\n      (acc: any, d: number) => {\n        acc[d.toString()] = 0\n        return acc\n      },\n      {}\n    )\n  }\n  const classes = useStyles()\n  const _data = cumsum()\n  const data = {\n    x: 'x',\n    type: 'bar',\n    columns: [\n      ['x', ..._data.x],\n      ['SOL', ..._data.y]\n    ],\n    colors: { SOL: 'rgb(0, 255, 163)' }\n  }\n  const axis = {\n    x: { label: 'Epoch', values: getXLabels(), localTime: false },\n    y: { label: 'SOL' }\n  }\n  const bar = { width: { ratio: 0.5 } }\n  const interaction = { enabled: true }\n\n  const tooltip = {\n    format: {\n      title: (x: any) => `Epoch ${x}`,\n      value: (val: any) => parseFloat(val).toFixed(3)\n    }\n  }\n\n  const handleRedeemClick = () => {\n    setDialogVisible('redeemEgg', true)\n  }\n\n  return (\n    <Paper elevation={24} className={classes.paper}>\n      <Typography color=\"textSecondary\" variant=\"h5\">\n        My Eggs\n      </Typography>\n\n      <div style={{ display: 'flex' }}>\n        <div style={{ flex: 0.5, maxHeight: '30vh', overflowX: 'scroll' }}>\n          {accounts.map((d: Account) => (\n            <Egg\n              key={`egg-${d.pubkey}`}\n              epoch={d.account.rentEpoch}\n              publicKey={d.pubkey}\n              grail={d.account.data.grail}\n              yolk={d.account.data.yolk}\n            />\n          ))}\n        </div>\n        <div className={classes.buttonsPanel}>\n          <Button\n            className={classes.redeemButton}\n            fullWidth\n            disabled={!selectedEgg || !connected}\n            onClick={handleRedeemClick}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Redeem\n          </Button>\n          <Button\n            className={classes.listButton}\n            fullWidth\n            onClick={() => {}}\n            variant=\"outlined\"\n            color=\"secondary\"\n          >\n            List\n          </Button>\n        </div>\n        <div style={{ flex: 0.6 }}>\n          <C3Chart\n            className={classes.chart}\n            data={data}\n            axis={axis}\n            interaction={interaction}\n            bar={bar}\n            tooltip={tooltip}\n          />\n        </div>\n      </div>\n      <RedeemEggDialog />\n    </Paper>\n  )\n}\n\nexport default EggsCard\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nconst PURPLE = 'rgb(194, 63, 218)'\nconst PURPLE_LIGHT = 'rgba(194, 63, 218, 0.6)'\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      maxWidth: '94%',\n      marginLeft: '3%',\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(4)\n    },\n    text: {\n      color: PURPLE\n    },\n    button: {\n      backgroundColor: PURPLE,\n      color: '#303030',\n      width: '30%',\n      '&:hover': {\n        backgroundColor: PURPLE_LIGHT\n      }\n    }\n  })\n)\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport { GREEN } from '../../colors'\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    notification: {\n      '& .MuiPaper-root': {\n        backgroundColor: `${GREEN} !important`\n      }\n    }\n  })\n)\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { useStyles } from './styles'\n\ninterface Props {\n  open: boolean\n  setOpen: (visible: boolean) => void\n}\n\nconst Notification: React.FC<Props> = ({ open, setOpen }) => {\n  const classes = useStyles()\n\n  const handleClose = (\n    event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setOpen(false)\n  }\n\n  return (\n    <div>\n      <Snackbar\n        className={classes.notification}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        open={open}\n        autoHideDuration={5000}\n        onClose={handleClose}\n        message=\"Egg purchased successfully\"\n        action={\n          <React.Fragment>\n\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n  )\n}\nexport default Notification\n","import React, { useEffect, useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Typography from '@material-ui/core/Typography'\nimport Slide from '@material-ui/core/Slide'\nimport { TransitionProps } from '@material-ui/core/transitions'\nimport { useStore, State } from '../../store/app'\nimport { PURPLE } from '../../colors'\nimport { Egg } from '../Egg'\nimport Notification from './Notification'\n\nconst setDialogVisibleSelector = (state: State) => state.setDialogVisible\nconst dialogVisibleSelector = (state: State) => state.dialogs.createEgg\nconst clientSelector = (state: State) => state.client\nconst chainSelector = (state: State) => state.chain\nconst walletSelector = (state: State) => state.wallet\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nconst CreateEggDialog: React.FC = () => {\n  const [showNotification, setShowNotification] = useState(false)\n  const dialogVisible = useStore(dialogVisibleSelector)\n  const setDialogVisible = useStore(setDialogVisibleSelector)\n  const client = useStore(clientSelector)\n  const [rentExemption, setRentExemption] = useState(0)\n  const chain = useStore(chainSelector)\n  const wallet = useStore(walletSelector)\n\n  const handleClose = () => {\n    setDialogVisible('createEgg', false)\n  }\n\n  useEffect(() => {\n    const f = async () => {\n      const params = {\n        jsonrpc: '2.0',\n        id: 1,\n        method: 'getMinimumBalanceForRentExemption',\n        params: [16]\n      }\n      const res = await client.request(params)\n      setRentExemption(res)\n    }\n    f()\n  }, [client])\n\n  const buyEgg = async () => {\n    await chain.transferToStakeAccount(wallet)\n    setDialogVisible('createEgg', false)\n    setShowNotification(true)\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={dialogVisible}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogContent>\n          <div style={{ display: 'flex' }}>\n            <div style={{ flex: 1 }}>\n              <Egg />\n            </div>\n            <div style={{ flex: 1 }}>\n              <Typography variant=\"h6\">You will receive</Typography>\n              <Typography variant=\"h6\">1 Egg Epoch</Typography>\n              <Typography variant=\"body2\">\n                Your transaction will be 10 SOL for the egg and {rentExemption}{' '}\n                lamports for rent exemption\n              </Typography>\n            </div>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={buyEgg} style={{ color: PURPLE }}>\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Notification open={showNotification} setOpen={setShowNotification} />\n    </div>\n  )\n}\nexport default CreateEggDialog\n","import React, { useState, useEffect } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { Egg } from '../Egg'\nimport { useStore, State } from '../../store/app'\nimport { useStyles } from './styles'\nimport { CreateEggDialog } from '../CreateEggDialog'\n\nconst clientSelector = (state: State) => state.client\nconst connectedSelector = (state: State) => state.connected\nconst setDialogVisibleSelector = (state:State) => state.setDialogVisible\n\nconst CreateEggCard: React.FC = () => {\n  const classes = useStyles()\n  const [currentEpoch, setCurrentEpoch] = useState({epoch: 0, slotIndex: 0, slotsInEpoch: 0})\n  const client = useStore(clientSelector)\n  const setDialogVisible = useStore(setDialogVisibleSelector)\n  const connected = useStore(connectedSelector)\n\n  useEffect(() => {\n      const interval = setInterval(async ()=>{\n        const params = {\n          jsonrpc: '2.0',\n          method: 'getEpochInfo'\n        }\n        const res = await client.request(params)\n        setCurrentEpoch(res)\n      }, 5000)\n      return () => clearInterval(interval)\n  }, [client])\n\n  const getRoundEpoch = (): number => {\n    /**\n     * @returns Epoch completion in rounded percentage\n     */\n    return Math.ceil((currentEpoch.slotIndex/currentEpoch.slotsInEpoch) * 100000)/1000\n  }\n\n  const handleClick = () => {\n    setDialogVisible('createEgg', true)\n  }\n\n  return (\n    <Paper className={classes.paper} elevation={24}>\n      <CreateEggDialog />\n      <Typography className={classes.text} variant=\"h5\">\n        Create an Egg\n      </Typography>\n\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <div style={{ flex: 1 }}>\n          <Egg showYolkOnHover={false} />\n        </div>\n        <div style={{ flex: 1 }}>\n          <Typography className={classes.text} variant=\"h6\">\n            Cost: 10.00 SOL\n          </Typography>\n          <Typography className={classes.text} variant=\"h6\">\n            Current Epoch: {currentEpoch.epoch}{' '}\n          </Typography>\n          <Typography className={classes.text} variant=\"h6\">\n            Completion: {currentEpoch.slotIndex}/{currentEpoch.slotsInEpoch} Slots  ({getRoundEpoch()}%)\n          </Typography>\n        </div>\n        <div style={{ flex: 1, textAlign: 'center' }}>\n          <Button\n            className={classes.button}\n            onClick={handleClick}\n            variant=\"contained\"\n            disabled={!connected}\n          >\n            Create\n          </Button>\n        </div>\n      </div>\n    </Paper>\n  )\n}\n\nexport default CreateEggCard\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nexport const BLUE = 'rgb(3, 225, 255)'\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      // maxWidth: '94%',\n      // marginLeft: '3%',\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(4)\n    },\n    text: {\n      color: BLUE\n    },\n    chart: {\n      '& .domain': {\n        fill: 'none',\n        strokeWidth: 1,\n        stroke: '#fff'\n      },\n      '& line': {\n        stroke: '#FFF'\n      },\n      '& .tick, & text': {\n        fill: '#fff',\n        strokeWidth: 1\n      },\n      '& .c3-tooltip th': {\n        backgroundColor: 'rgba(30,30,30,0.8)'\n      },\n      ' & .c3-tooltip td': {\n        backgroundColor: 'rgba(30,30,30,0.7)'\n      },\n      '& .c3-tooltip tr': {\n        border: '1px rgba(30,30,30,1) solid'\n      }\n    }\n  })\n)\n","// cspell: ignore cumsum\nimport React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { useStyles, BLUE } from './styles'\nimport { useStore, State, Account } from '../../store/app'\n// @ts-ignore\nimport C3Chart from 'react-c3js'\nimport 'c3/c3.css'\n\nconst bar = { width: { ratio: 0.5 } }\nconst interaction = { enabled: true }\n\nconst accountsSelector = (state: State) => state.accounts\n\nconst DailyRewardsCard: React.FC = () => {\n  const accounts = useStore(accountsSelector)\n  const classes = useStyles()\n\n  const getXLabels = (): number[] => {\n    /**\n     * @returns all the epochs between the first and the last one\n     */\n    const epochs = accounts.map((d: Account) => d.account.rentEpoch)\n    const max = Math.max.apply(null, epochs)\n    const min = Math.min.apply(null, epochs)\n    return Array.from({ length: max - min }, (v, k) => k + min).reduce(\n      (acc: any, d: number) => {\n        acc[d.toString()] = 0\n        return acc\n      },\n      {}\n    )\n  }\n\n  const getChartData = (): { x: number[]; y: number[] } => {\n    const res = accounts.reduce((acc: any, account: Account) => {\n      const k = account.account.rentEpoch.toString()\n      if(!acc[k]) {\n        acc[k] = 0\n      }\n      acc[k] += account.account.data.grail\n      return acc\n    }, getXLabels())\n    return {\n      x: Array.from(new Set(Object.keys(res).map((d) => parseInt(d)))),\n      y: Object.values(res)\n    }\n  }\n  const _data = getChartData()\n  const data = {\n    x: 'x',\n    type: 'bar',\n    columns: [\n      ['x', ..._data.x],\n      ['SOL', ..._data.y]\n    ],\n    colors: { SOL: BLUE }\n  }\n\n  const axis = {\n    x: {\n      label: 'Epoch',\n      values: _data.x,\n      localTime: false\n    },\n    y: { label: 'SOL' }\n  }\n\n  const tooltip = {\n    format: {\n      title: (x: any) => `Epoch ${x}`,\n      value: (val: any) => parseFloat(val).toFixed(3)\n    }\n  }\n  console.log(data)\n  return (\n    <Paper elevation={24} className={classes.paper}>\n      <Typography className={classes.text} variant=\"h5\">\n        Rewards per Epoch\n      </Typography>\n      <C3Chart\n        data={data}\n        className={classes.chart}\n        axis={axis}\n        interaction={interaction}\n        bar={bar}\n        tooltip={tooltip}\n      />\n    </Paper>\n  )\n}\n\nexport default DailyRewardsCard\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nexport const BLUE = 'rgb(3, 225, 255)'\nexport const LIGHT_BLUE = 'rgba(3, 225, 255, 0.6)'\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      backgroundColor: BLUE,\n      color: '#303030',\n      '&:hover': {\n        backgroundColor: LIGHT_BLUE\n      }\n    }\n  })\n)\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { Egg } from '../Egg'\nimport { useStyles } from './styles'\n\ninterface Props {\n  discount: number\n  epoch: number\n}\n\nconst BuyEggCard: React.FC<Props> = ({ discount, epoch }) => {\n  const classes = useStyles()\n  return (\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n      <div style={{ flex: 1 }}>\n        <Egg showYolkOnHover={false} />\n      </div>\n      <div style={{ flex: 1 }}>\n        <Typography variant=\"body2\" color=\"textPrimary\">\n          Epoch: {epoch}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textPrimary\">\n          {discount === 0\n            ? 'Market Price'\n            : discount > 0\n            ? `Premium: ${Math.abs(discount)}%`\n            : `Discount: ${Math.abs(discount)}%`}\n        </Typography>\n      </div>\n      <div style={{ flex: 1 }}>\n        <Button className={classes.button} onClick={() => {}}>\n          Buy\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default BuyEggCard\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nexport const BLUE = 'rgb(3, 225, 255)'\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      height: '92%',\n      // maxWidth: '94%',\n      // marginLeft: '3%',\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(4)\n    },\n    text: {\n      color: BLUE\n    }\n  })\n)\n","import React, { useEffect, useState } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { BuyEggCard } from '../BuyEggCard'\nimport { useStyles } from './styles'\nimport { useStore, State, Account } from '../../store/app'\n\ninterface CardData {\n  discount: number\n  epoch: number\n}\n\nconst accountsSelector = (state: State) => state.accounts\n\nconst MarketCard: React.FC = () => {\n  const [data, setData] = useState<CardData[]>([])\n  const accounts = useStore(accountsSelector)\n\n  const getRandomBetween = (min: number, max: number): number => {\n    return Math.floor(Math.random() * (max + 1)) + min\n  }\n\n  useEffect(() => {\n    const epochs = accounts.map((d: Account) => d.account.rentEpoch)\n    const maxEpoch = Math.max.apply(null, epochs)\n    const _data: CardData[] = []\n    for (let i = 0; i < 10; i++) {\n      const premium = Math.random() > 0.5 ? 1 : -1\n      _data.push({\n        epoch: getRandomBetween(1, maxEpoch),\n        discount: getRandomBetween(1 * premium, premium * 5)\n      })\n    }\n    setData(_data)\n  }, [accounts])\n\n  const classes = useStyles()\n  return (\n    <Paper elevation={24} className={classes.paper}>\n      <Typography className={classes.text} variant=\"h5\">\n        Egg Marketplace\n      </Typography>\n\n      <div style={{ flex: 0.5, maxHeight: '31vh', overflow: 'scroll' }}>\n        {data\n          .sort((a, b) => a.epoch - b.epoch)\n          .map((d, i) => (\n            <BuyEggCard key={i} discount={d.discount} epoch={d.epoch} />\n          ))}\n      </div>\n    </Paper>\n  )\n}\n\nexport default MarketCard\n","// cspell: ignore lamports pubkey blockhash txid DEVNET\nimport React, { useEffect, useCallback } from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\n// @ts-ignore\nimport { Navbar } from './components/Navbar'\nimport { EggsCard } from './components/EggsCard'\nimport { CreateEggCard } from './components/CreateEggCard'\nimport { DailyRewardsCard } from './components/DailyRewardsCard'\nimport { MarketCard } from './components/MarketCard'\nimport { useStore, State, Account } from './store/app'\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token'\nimport Grid from '@material-ui/core/Grid'\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    text: {\n      secondary: 'rgb(0, 255, 163) !important',\n      hint: 'rgb(194, 63, 218) !important'\n    }\n  }\n})\n\nconst chainSelector = (state: State) => state.chain\nconst setAccountsSelector = (state: State) => state.setAccounts\nconst walletSelector = (state: State) => state.wallet\nconst setConnectedSelector = (state: State) => state.setConnected\nconst clientSelector = (state: State) => state.client\n\nconst getRandom = (): number => {\n  return Math.ceil(Math.random() * 1000) / 100\n}\n\nfunction App() {\n  const setAccounts = useStore(setAccountsSelector)\n  const setConnected = useStore(setConnectedSelector)\n  const wallet = useStore(walletSelector)\n  const client = useStore(clientSelector)\n  const chain = useStore(chainSelector)\n\n  const setDataForWallet = useCallback(async () => {\n    const params = {\n      jsonrpc: '2.0',\n      id: 1,\n      method: 'getTokenAccountsByOwner',\n      params: [\n        // TODO: change to user defined account, perhaps the wallet\n        // '2yyMk39x51tnNdjkRpDurjQvgAP7xK99nhACiJGpQ7BJ', // LOCAL\n        'HGEyziUSPNXaHJADqVcTcJhwMTxLvwnJ8Qs2yXvs2C4h', // DEVNET\n        // wallet.publicKey.toBase58(),\n        { programId: TOKEN_PROGRAM_ID.toBase58() },\n        { encoding: 'jsonParsed' }\n      ]\n    }\n\n    const result = await client.request(params)\n    const accounts: Account[] = result.value.sort(\n      (a: Account, b: Account) => a.account.rentEpoch - b.account.rentEpoch\n    )\n    const randoms: { [key: string]: number } = {}\n    let sum = 0\n    for (let i = accounts.length - 1; i >= 0; i--) {\n      const key = accounts[i].account.rentEpoch.toString()\n      if (!Object.keys(randoms).includes(key)) {\n        const val = getRandom()\n        sum += val\n        sum = parseFloat(sum.toFixed(2))\n        randoms[key] = sum\n      }\n      accounts[i].account.data.grail = randoms[key]\n      accounts[i].account.data.yolk = 10\n    }\n    setAccounts(accounts)\n  }, [setAccounts, client])\n\n  useEffect(() => {\n    wallet.on('connect', async (publicKey: any) => {\n      console.log(`Connected to ${publicKey}`)\n      setConnected(true)\n      await setDataForWallet()\n    })\n    wallet.on('disconnect', () => {\n      console.log('Disconnected')\n      setConnected(false)\n    })\n    const f = async () => {\n      await setDataForWallet()\n    }\n    f() //TODO: remove\n    return () => wallet.disconnect()\n  }, [setConnected, wallet, setDataForWallet])\n\n  const initApp = async () => {\n    await chain.initApp(wallet)\n  }\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Navbar />\n      <EggsCard />\n      <CreateEggCard />\n      <Grid container spacing={2} style={{ width: '95%', marginLeft: '2.5%' }}>\n        <Grid item xs={12} md={6}>\n          <MarketCard />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <DailyRewardsCard />\n        </Grid>\n      </Grid>\n      {/* <button onClick={initApp}>Transfer</button> */}\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}